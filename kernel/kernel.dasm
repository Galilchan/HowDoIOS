; --------------------------------------------
; Title:   kernel
; Author:  S0lll0s
; Date:    18.04.2013
; Version: 1.1
; --------------------------------------------

:kern_do_interrupt SET 0, 0        ; either uncomment this or the two BRK's above
                   IFE A, 0x1337              ; switch slices
                        SET PC, kern_switch
                   ;JSR kern_hijack_interrupt
:kern_done_int     SET 1, 1                   ; space for 'hijacked' instruction
                   IAG Y
                   ADD Y, 1
                   SET PC, Y

:kern_switch
                       SET A, [kern_slice]
                       SET [A], POP ; A 
                       SET [A+1], B ; B
                       SET [A+2], C ; C
                       SET [A+3], X ; X
                       SET [A+4], Y ; Y
                       SET [A+5], Z ; Z
                       SET [A+6], I ; I
                       SET [A+7], J ; J
                       SET [A+8], POP ; PC
                       IAG X
                       SET [A+9], X ; IA
                       
                       ADD A, 10              ; switch slices
                       IFG A, kern_slices_end - 1
                       	SET A, kern_slices
					   SET [ kern_slice ], A
    				   
                       SET PUSH, [A+8] ; PC ; restore old state
                       SET PUSH, [A] ; A 
                       SET X, [A+9] ; Save IA in X temporarily
                       IAS X
                       SET B, [A+1] ; B
                       SET C, [A+2] ; C
                       SET X, [A+3] ; X
                       SET Y, [A+4] ; Y
                       SET Z, [A+5] ; Z
                       SET I, [A+6] ; I
                       SET J, [A+7] ; J

                       RFI 0

:kern_hijack_interrupt IAG A
                       SET [ kern_done_int ], [A] ; copy insr. to replace
                       SET [ kern_done_int + 1 ], [A + 1] ; copy insr. to replace
                       SET [ A ], 0x7f81                  ; SET PC,
                       SET [ A + 1 ], kern_do_interrupt     ; kern_do_interrupt
                       
                       SET PC, POP
                       
:kern_slice  DAT kern_slices
:kern_slices DAT 0 ; A
             DAT 0 ; B
             DAT 0 ; C
             DAT 0 ; X
             DAT 0 ; Y
             DAT 0 ; Z
             DAT 0 ; I
             DAT 0 ; J
             DAT _editor ; PC
             DAT 0 ; IA

			 DAT 0 ; A
             DAT 0 ; B
             DAT 0 ; C
             DAT 0 ; X
             DAT 0 ; Y
             DAT 0 ; Z
             DAT 0 ; I
             DAT 0 ; J
             DAT _count ; PC
             DAT 0 ; IA
:kern_slices_end