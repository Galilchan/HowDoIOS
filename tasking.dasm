:_tasking_next_slice
	; store all registers (A and PC from stack)
	; find next thread
	; set current pid (update _tasking_current_pid and _proc)
	; load all registers
	; jump to PC

:_tasking_num_tasks		dat 0 ; num tasks
:_tasking_current_pid	dat 0 ; current process id
:_tasking_current_proc	dat 0 ; current process task info
:_tasking_list_start	dat 0 ; start of task list
	
; task list: (sorted with ascending pid)
; dat pid, task info, next entry

; task info:
; dat pid, start of mem, size of mem (code and data sections kinda)
; dat A, B, C, X, Y, Z, I, J, PC, SP, EX, interrupt address
; dat flags ; pad to power of two (16 / allocation)

